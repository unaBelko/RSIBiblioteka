// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage;
using Microsoft.EntityFrameworkCore.Storage.Internal;
using RSIbiblioteka;
using System;

namespace RSIbiblioteka.Migrations
{
    [DbContext(typeof(BibliotekaContext))]
    partial class BibliotekaContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.0.0-rtm-26452")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("RSIbiblioteka.Models.Autor", b =>
                {
                    b.Property<int>("AutorId")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Ime");

                    b.Property<string>("Prezime");

                    b.Property<int>("SpolId");

                    b.HasKey("AutorId");

                    b.HasIndex("SpolId");

                    b.ToTable("Autori");
                });

            modelBuilder.Entity("RSIbiblioteka.Models.AutorKnjiga", b =>
                {
                    b.Property<int>("AutorKnjigaId")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("AutorId");

                    b.Property<int>("KnjigaId");

                    b.HasKey("AutorKnjigaId");

                    b.HasIndex("AutorId");

                    b.HasIndex("KnjigaId");

                    b.ToTable("AutoriKnjige");
                });

            modelBuilder.Entity("RSIbiblioteka.Models.Bibliotekar", b =>
                {
                    b.Property<int>("BibliotekarId")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Ime");

                    b.Property<DateTime>("PocetakRada");

                    b.Property<string>("Prezime");

                    b.Property<int>("SpolId");

                    b.HasKey("BibliotekarId");

                    b.HasIndex("SpolId");

                    b.ToTable("Bibliotekari");
                });

            modelBuilder.Entity("RSIbiblioteka.Models.Clan", b =>
                {
                    b.Property<int>("ClanId")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("ClanskiBroj");

                    b.Property<string>("Ime");

                    b.Property<string>("Prezime");

                    b.Property<int>("SpolId");

                    b.HasKey("ClanId");

                    b.HasIndex("SpolId");

                    b.ToTable("Clanovi");
                });

            modelBuilder.Entity("RSIbiblioteka.Models.IzdavanjeKnjige", b =>
                {
                    b.Property<int>("IzdavanjeKnjigeId")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("BibliotekarId");

                    b.Property<int>("BrojDana");

                    b.Property<int>("ClanId");

                    b.Property<DateTime>("DatumIzdavanja");

                    b.Property<int>("KnjigaId");

                    b.HasKey("IzdavanjeKnjigeId");

                    b.HasIndex("BibliotekarId");

                    b.HasIndex("ClanId");

                    b.HasIndex("KnjigaId");

                    b.ToTable("IzdavanjeKnjiga");
                });

            modelBuilder.Entity("RSIbiblioteka.Models.Knjiga", b =>
                {
                    b.Property<int>("KnjigaId")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Naslov");

                    b.Property<string>("Opis");

                    b.HasKey("KnjigaId");

                    b.ToTable("Knjige");
                });

            modelBuilder.Entity("RSIbiblioteka.Models.Spol", b =>
                {
                    b.Property<int>("SpolId")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Naziv");

                    b.HasKey("SpolId");

                    b.ToTable("Spolovi");
                });

            modelBuilder.Entity("RSIbiblioteka.Models.Autor", b =>
                {
                    b.HasOne("RSIbiblioteka.Models.Spol", "Spol")
                        .WithMany()
                        .HasForeignKey("SpolId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("RSIbiblioteka.Models.AutorKnjiga", b =>
                {
                    b.HasOne("RSIbiblioteka.Models.Autor", "Autor")
                        .WithMany()
                        .HasForeignKey("AutorId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("RSIbiblioteka.Models.Knjiga", "Knjiga")
                        .WithMany()
                        .HasForeignKey("KnjigaId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("RSIbiblioteka.Models.Bibliotekar", b =>
                {
                    b.HasOne("RSIbiblioteka.Models.Spol", "Spol")
                        .WithMany()
                        .HasForeignKey("SpolId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("RSIbiblioteka.Models.Clan", b =>
                {
                    b.HasOne("RSIbiblioteka.Models.Spol", "Spol")
                        .WithMany()
                        .HasForeignKey("SpolId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("RSIbiblioteka.Models.IzdavanjeKnjige", b =>
                {
                    b.HasOne("RSIbiblioteka.Models.Bibliotekar", "Bibliotekar")
                        .WithMany()
                        .HasForeignKey("BibliotekarId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("RSIbiblioteka.Models.Clan", "Clan")
                        .WithMany()
                        .HasForeignKey("ClanId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("RSIbiblioteka.Models.Knjiga", "Knjiga")
                        .WithMany()
                        .HasForeignKey("KnjigaId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
